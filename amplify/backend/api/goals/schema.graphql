enum LMH {
  L
  M
  H
}

type Name {
  fn: String!
  ln: String
}

enum FeedbackType {
  C
  S
  Q
}

enum CalcType {
  BR
  FI
  LOAN
  EDU_LOAN
  DR
  TC
}

type Feedback
  @model
  @aws_iam
  @aws_cognito_user_pools
  @auth(
    rules: [
      { allow: public, provider: iam, operations: [create] }
      { allow: private, operations: [create] }
    ]
  ) {
  id: ID!
  type: FeedbackType!
  email: String!
  name: Name!
  feedback: String!
  uname: String
}

type Rating
  @model
  @aws_iam
  @aws_cognito_user_pools
  @auth(
    rules: [
      { allow: public, provider: iam, operations: [create] }
      { allow: private, operations: [create] }
    ]
  ) {
  id: ID!
  type: CalcType!
  rating: Int!
  feedbackId: String
}

type Target {
  num: Int!
  val: Float!
}

enum LoanType {
  A
  B
}

enum GoalType {
  B
  S
  R
  E
  X
  C
  FF
  D
  O
  T
}

type Loan {
  type: LoanType!
  per: Int!
  rate: Float
  dur: Int!
  ry: Int!
  pp: [Target!]
  ira: [Target!]
  emi: Float
  pmi: Float
  peper: Int
}

type PP {
  cash: Float!
  ltdep: Float!
  mtb: Float
  imtb: Float
  hyb: Float
  ihyb: Float
  teb: Float
  reit: Float
  ireit: Float
  reitETF: Float
  ireitETF: Float
  re: Float
  gold: Float
  goldb: Float
  lcs: Float
  lcetf: Float
  ilcs: Float
  ilcetf: Float
  mscs: Float
  imscs: Float
  dgs: Float
  uc: Float
  crypto: Float
  p2p: Float
}

enum BuyType {
  P
  V
  O
}

type Goal @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  sy: Int!
  sm: Int
  ey: Int!
  by: Int!
  btr: Float
  tdr: Float!
  tdl: Int!
  tbi: Int
  tdli: Int
  tbr: Float
  name: String!
  type: GoalType!
  ccy: String!
  cp: Int
  chg: Float
  achg: Float
  tgts: [Target!]
  loan: Loan
  imp: LMH!
  met: Boolean
  prob: LMH
  manual: Int!
  amper: Float
  amsy: Int
  aiper: Float
  aisy: Int
  dr: Float
  sa: Int
  pg: [Target]
  pl: [Target]
  ra: Int
  rachg: Float
  img: String
  pp: PP
  rp: RiskProfile
  bt: BuyType
  rc: Int
  rcchg: Float
}

enum RiskProfile {
  VC
  C
  M
  A
  VA
}

enum TaxLiability {
  NIL
  L
  M
  H
  VH
}

type UserInfo
  @model
  @aws_iam
  @aws_cognito_user_pools
  @key(fields: ["uname"])
  @key(name: "ByIM", fields: ["im"], queryField: "regByIM")
  @key(name: "ByMob", fields: ["mob"], queryField: "regByMob")
  @key(name: "ByEmail", fields: ["email"], queryField: "regByEmail")
  @key(name: "ByDOB", fields: ["dob"], queryField: "regByDOB")
  @auth(
    rules: [
      { allow: public, provider: iam, operations: [read] }
      { allow: private, operations: [create, read, update, delete] }
    ]
  ) {
  uname: String!
  email: String!
  dob: AWSDate!
  im: Float
  mob: Float
  notify: Boolean!
  tax: TaxLiability!
  rp: RiskProfile!
  dr: Float!
  tc: AWSDateTime!
  le: Int!
}

type InsAnalytics
  @model
  @aws_iam
  @key(fields: ["id"])
  @auth(
    rules: [
      {
        allow: private
        provider: iam
        operations: [create, read, update, delete]
      }
    ]
  ) {
  id: String!
  analytics: AWSJSON!
}

enum AssetType {
  E
  F
  A
  H
}

enum AssetSubType {
  S
  A
  CB
  GB
  HB
  GBO
  GoldB
  Gold
  I
  L
  R
  C
  M
  O
  V
  Cash
  P2P
  War
}

enum Industry {
  A
  IM
  F
  CG
  CC
  CH
  CS
  FP
  C
  H
  PH
  IT
  MED
  MET
  OG
  POW
  S
  TC
  TEX
  CAPG
  TECH
  CD
  E
  CDGS
  BASM
  U
}

enum InsType {
  ETF
  REIT
  InvIT
}

enum MCap {
  S
  M
  L
  H
}

enum CreditRating {
  E
  H
  M
  L
  J
}

enum Exchange {
  NSE
  BSE
}

type Feeds
  @model
  @aws_iam
  @key(fields: ["id"])
  @auth(
    rules: [
      {
        allow: private
        provider: iam
        operations: [create, read, update, delete]
      }
    ]
  ) {
  id: String!
  tname: String!
  exchg: Exchange
  url: String
  count: Int!
}

type INExchgPrice
  @model
  @aws_iam
  @key(fields: ["id"])
  @auth(
    rules: [
      {
        allow: private
        provider: iam
        operations: [create, read, update, delete]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: String!
  sid: String!
  name: String!
  exchg: Exchange!
  type: AssetType!
  subt: AssetSubType!
  itype: InsType
  price: Float!
  prev: Float!
  meta: InsMeta
  fv: Int
  under: String
  yhigh: Float
  ylow: Float
  split: String
  div: Float
  splitd: AWSDate
  divdd: AWSDate
  divrd: AWSDate
  divpd: AWSDate
  beta: Float
  mcap: Float
  mcapt: MCap
}

type InsMeta
  @model
  @aws_iam
  @key(fields: ["id"])
  @auth(
    rules: [
      {
        allow: private
        provider: iam
        operations: [create, read, update, delete]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: String!
  mcap: MCap
  ind: String
}

enum Recommendation {
  B
  H
  S
}
type InsBHS
  @model
  @aws_iam
  @key(fields: ["id"])
  @auth(
    rules: [
      {
        allow: private
        provider: iam
        operations: [create, read, update, delete]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: String!
  rec: Recommendation
  fun: AWSJSON
  tech: AWSJSON
  ca: AWSJSON
}

type InsUni
  @model
  @aws_iam
  @key(fields: ["id"])
  @auth(
    rules: [
      {
        allow: private
        provider: iam
        operations: [create, read, update, delete]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: String!
  sid: String
  curr: String
}

type AllIndices
  @model
  @aws_iam
  @key(fields: ["id"])
  @auth(
    rules: [
      {
        allow: private
        provider: iam
        operations: [create, read, update, delete]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: String!
  name: String!
  exchg: Exchange!
  price: Float!
  prev: Float
  ylow: Float
  yhigh: Float
  pe: Float
  pb: Float
  type: AssetType
  subt: AssetSubType
  curr: String!
  ind: Industry
}

type INBondPrice
  @model
  @aws_iam
  @key(fields: ["id"])
  @auth(
    rules: [
      {
        allow: private
        provider: iam
        operations: [create, read, update, delete]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: String!
  sid: String!
  name: String!
  type: AssetType!
  subt: AssetSubType!
  price: Float!
  exchg: Exchange!
  sm: Int
  sy: Int
  mm: Int
  my: Int
  rate: Float!
  fr: Boolean!
  tf: Boolean!
  fv: Int
  cr: CreditRating
  crstr: String
  ytm: Float
}

type INMFPrice
  @model
  @aws_iam
  @key(fields: ["id"])
  @auth(
    rules: [
      {
        allow: private
        provider: iam
        operations: [create, read, update, delete]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: String!
  sid: String!
  tid: String
  dir: String
  name: String!
  type: AssetType!
  subt: AssetSubType!
  price: Float!
  mftype: MFSchemeType!
  mcap: MCap
  tf: Boolean
}

enum NPSPFM {
  L
  H
  S
  A
  I
  U
  K
}

enum NPSSchemeType {
  T1
  T2
  Lite
  APY
  CG
  SG
  CCG
}

type NPSPrice
  @model
  @aws_iam
  @key(fields: ["id"])
  @auth(
    rules: [
      {
        allow: private
        provider: iam
        operations: [create, read, update, delete]
      }
      { allow: private, operations: [read] }
    ]
  ) {
  id: String!
  pfm: NPSPFM!
  st: NPSSchemeType!
  name: String!
  type: AssetType!
  subt: AssetSubType!
  price: Float!
}

type Family @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  tid: String!
  name: String!
  tax: TaxLiability!
}

type Holding {
  id: String!
  qty: Float!
  name: String
  fId: String!
  curr: String!
  chg: Float
  chgF: Int
  payF: Int
  type: String
  subt: String
  sm: Int
  sy: Int
  em: Int
  ey: Int
  amt: Float
}

type Instrument {
  id: String!
  sid: String
  qty: Float!
  pur: [Purchase!]
  fId: String!
  curr: String!
}

enum PropertyType {
  P
  A
  H
  C
  COMM
  T
  OTHER
}

type Purchase {
  amt: Float!
  day: Int
  month: Int!
  year: Int!
  qty: Float!
}

type Property {
  type: PropertyType!
  name: String
  pin: Int
  purchase: Purchase
  address: String
  curr: String!
  city: String
  country: String
  state: String
  own: [Ownership!]!
  rate: Float!
  mv: Float
  mvy: Int
  mvm: Int
  res: Boolean!
}

type Ownership {
  fId: String!
  per: Float!
}

type Balance {
  amt: Float!
  curr: String!
  name: String
  fId: String!
}

enum MFSchemeType {
  O
  C
  I
}

type UserHoldings
  @model
  @aws_iam
  @key(fields: ["uname"])
  @auth(
    rules: [
      { allow: owner }
      { allow: private, provider: iam, operations: [read] }
    ]
  ) {
  uname: String!
  dep: [Holding!]
  ltdep: [Holding!]
  p2p: [Holding!]
  loans: [Holding!]
  credit: [Holding!]
  savings: [Holding!]
  property: [Property!]
  vehicles: [Holding!]
  pm: [Holding!]
  pf: [Holding!]
  nps: [Holding!]
  crypto: [Holding!]
  ins: [Holding!]
  other: [Holding!]
  angel: [Holding!]
}

type UserIns
  @model
  @aws_iam
  @key(fields: ["uname"])
  @auth(
    rules: [
      { allow: owner }
      { allow: private, provider: iam, operations: [read] }
    ]
  ) {
  uname: String!
  ins: [Instrument!]!
}

type AA
  @model
  @aws_iam
  @key(fields: ["uname"])
  @auth(
    rules: [
      { allow: owner }
      { allow: private, provider: iam, operations: [read] }
    ]
  ) {
  uname: String!
  curr: AWSJSON
  tgt: AWSJSON!
}
